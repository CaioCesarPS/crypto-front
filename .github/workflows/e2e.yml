# E2E Testing Pipeline with Playwright
# Runs on pull requests and can be triggered manually
# Tests critical user flows across multiple browsers

name: E2E Tests

on:
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # Allow manual trigger
  schedule:
    # Run E2E tests daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  NODE_VERSION: '20'
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

jobs:
  # ============================================
  # E2E Tests on Chromium
  # ============================================
  e2e-chromium:
    name: E2E Tests (Chromium)
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install chromium --with-deps

      - name: Build application
        run: npm run build

      - name: Run E2E tests
        run: npm run test:e2e -- --project=chromium
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-chromium
          path: playwright-report/
          retention-days: 7

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts-chromium
          path: test-results/
          retention-days: 7

  # ============================================
  # E2E Tests on Firefox (Optional)
  # ============================================
  e2e-firefox:
    name: E2E Tests (Firefox)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install firefox --with-deps

      - name: Build application
        run: npm run build

      - name: Run E2E tests
        run: npm run test:e2e -- --project=firefox
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-firefox
          path: playwright-report/
          retention-days: 7

  # ============================================
  # E2E Tests on WebKit (Optional)
  # ============================================
  e2e-webkit:
    name: E2E Tests (WebKit)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install webkit --with-deps

      - name: Build application
        run: npm run build

      - name: Run E2E tests
        run: npm run test:e2e -- --project=webkit
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-webkit
          path: playwright-report/
          retention-days: 7

  # ============================================
  # E2E Success Check
  # ============================================
  e2e-success:
    name: E2E Tests Success
    runs-on: ubuntu-latest
    needs: [e2e-chromium]
    if: always()

    steps:
      - name: Check E2E status
        run: |
          if [[ "${{ needs.e2e-chromium.result }}" == "success" ]]; then
            echo "✅ E2E tests passed!"
            exit 0
          else
            echo "❌ E2E tests failed!"
            exit 1
          fi
