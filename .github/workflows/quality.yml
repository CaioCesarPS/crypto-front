# Code Quality and Coverage Reports
# Generates and uploads coverage reports
# Runs analysis on code quality metrics

name: Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'

env:
  NODE_VERSION: '20'

jobs:
  # ============================================
  # Code Coverage Analysis
  # ============================================
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for SonarCloud

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:unit

      - name: Generate coverage summary
        run: |
          echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          cat coverage/coverage-summary.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Full HTML report available in workflow artifacts." >> $GITHUB_STEP_SUMMARY

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-quality
          path: |
            coverage/
            !coverage/tmp
          retention-days: 30

      - name: Generate coverage badges
        run: |
          echo "Coverage reports generated"
          cat coverage/coverage-summary.json

  # ============================================
  # Dependency Analysis
  # ============================================
  dependencies:
    name: Dependency Check
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Check for outdated dependencies
        run: npm outdated || true

      - name: Audit dependencies
        run: npm audit --audit-level=high || true

      - name: Generate dependency tree
        run: npm list --depth=0 || true

  # ============================================
  # Code Quality Metrics
  # ============================================
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Count lines of code
        run: |
          echo "ðŸ“Š Lines of Code Analysis"
          echo "========================="
          find app components hooks lib -name "*.ts" -o -name "*.tsx" | xargs wc -l | tail -1

      - name: Count test files
        run: |
          echo "ðŸ“Š Test Coverage Analysis"
          echo "========================="
          echo "Test files:"
          find tests -name "*.test.ts" -o -name "*.test.tsx" | wc -l

      - name: Check bundle size
        run: |
          npm run build
          echo "ðŸ“¦ Build Size Analysis"
          echo "====================="
          du -sh .next
          du -sh .next/static
